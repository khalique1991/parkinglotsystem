version: "3.9"

services:
  # ==========================
  # Infra Services
  # ==========================
  user-db:
    image: postgres:15
    container_name: user-db
    environment:
      POSTGRES_DB: userdb
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    volumes:
      - user-db-data:/var/lib/postgresql/data
    ports:
      - "5433:5432"

  session-db:
      image: postgres:15
      container_name: session-db
      environment:
        POSTGRES_DB: sessiondb
        POSTGRES_USER: session
        POSTGRES_PASSWORD: password
      volumes:
        - session-db-data:/var/lib/postgresql/data
      ports:
        - "5434:5432"
  vault:
    image: hashicorp/vault:1.16.2
    container_name: vault-dev
    ports:
      - "8200:8200"
    environment:
      VAULT_DEV_ROOT_TOKEN_ID: root
      VAULT_DEV_LISTEN_ADDRESS: "0.0.0.0:8200"
    cap_add:
      - IPC_LOCK
    command: "server -dev -dev-root-token-id=root"
    networks:
      - parking-net
  postgres:
    image: postgres:15
    container_name: parking-postgres
    environment:
      POSTGRES_DB: parkingdb
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: root
    ports:
      - "5432:5432"
    networks:
      - parking-net
    volumes:
      - postgres-data:/var/lib/postgresql/data
  zookeeper:
    image: confluentinc/cp-zookeeper:7.6.0
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:7.6.0
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.14.0
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - ES_JAVA_OPTS=-Xms1g -Xmx1g
    ports:
      - "9200:9200"

  kibana:
    image: docker.elastic.co/kibana/kibana:8.14.0
    container_name: kibana
    depends_on:
      - elasticsearch
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    ports:
      - "5601:5601"

  logstash:
    image: docker.elastic.co/logstash/logstash:8.14.0
    container_name: logstash
    depends_on:
      - kafka
      - elasticsearch
    ports:
      - "5044:5044"   # beats input
      - "9600:9600"   # monitoring API
    volumes:
      - ./elk/logstash/pipeline:/usr/share/logstash/pipeline
    environment:
      - LS_JAVA_OPTS=-Xms512m -Xmx512m

  # ==========================
  # Microservices
  # ==========================

  auth-service:
    build: auth-service/Dockerfile
    container_name: auth-service
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - ELASTICSEARCH_URL=http://elasticsearch:9200
    depends_on:
      - kafka
      - elasticsearch

  parking-service:
    build: parking-service/Dockerfile
    container_name: parking-service
    ports:
      - "8081:8081"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
    depends_on:
      - kafka

  reservation-service:
    build: ticket-service/Dockerfile
    container_name: ticket-service
    ports:
      - "8082:8082"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
    depends_on:
      - kafka

  payment-service:
    build: payment-service/Dockerfile
    container_name: payment-service
    ports:
      - "8083:8083"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
    depends_on:
      - kafka

  notification-service:
    build: notification-service/Dockerfile
    container_name: notification-service
    ports:
      - "8085:8085"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - SPRING_MAIL_HOST=www.parkinglotsystem.com
      - SPRING_MAIL_PORT=587
      - SPRING_MAIL_USERNAME=mkhalique1991@gmail.com
      - SPRING_MAIL_PASSWORD=secret
    depends_on:
      - kafka
  eureka-server:
    image: your/eureka-server:latest
    build: ./eureka-server
    ports:
      - "8761:8761"

  edge-gateway:
      build: ./edge-gateway
      ports:
        - "8080:8080"
      environment:
        - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-server:8761/eureka/
        - AUTH_JWKS_URI=http://auth-service:8080/.well-known/jwks.json
      depends_on:
        - eureka-server
        - auth-service
        - parking-service
        - reservation-service
        - payment-service
        - notification-service
        - reporting-service

  user-service:
    build: ./user-service
    container_name: user-service
    ports:
      - "8087:8087"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:postgresql://user-db:5432/userdb
      - SPRING_DATASOURCE_USERNAME=user
      - SPRING_DATASOURCE_PASSWORD=password
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
    depends_on:
      - kafka
      - user-db

  session-service:
    build: ./session-service
    container_name: session-service
    ports:
      - "8088:8088"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:postgresql://session-db:5432/sessiondb
      - SPRING_DATASOURCE_USERNAME=session
      - SPRING_DATASOURCE_PASSWORD=password
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
    depends_on:
      - kafka
      - session-db
  reporting-service:
    build: reporting-service/Dockerfile
    container_name: reporting-service
    ports:
      - "8086:8086"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - ELASTICSEARCH_URL=http://elasticsearch:9200
    depends_on:
      - kafka
      - elasticsearch
      - logstash
networks:
  parking-net:

volumes:
  user-db-data:
  session-db-data:
  postgres-data:


